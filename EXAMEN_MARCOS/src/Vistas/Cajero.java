
package Vistas;

import javax.swing.JOptionPane;
import Vistas.Usuarios;
import Vistas.Usuarios.CuentaDolares;
import Vistas.Usuarios.Usuario;

public class Cajero extends javax.swing.JFrame {
private Usuarios usuarios;
private boolean datosIngresadosCorrectos;
private boolean cuentaDolaresExistente;
private Usuarios.Usuario usuarioActual;
    
    public Cajero() {
        initComponents();
        usuarios = new Usuarios();
        datosIngresadosCorrectos= false;
        deshabilitarComponentes();
        cuentaDolaresExistente= false;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtdineroIngresado = new javax.swing.JTextField();
        btnIngresarDinero = new javax.swing.JButton();
        btnRetirarDinero = new javax.swing.JButton();
        btnBalance = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        btnCompra = new javax.swing.JButton();
        btnVenta = new javax.swing.JButton();
        btnIngresar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Medium Cond", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cajero automático BN");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
        );

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jPanel6.setBackground(new java.awt.Color(102, 255, 204));
        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Usuario:");

        txtNombre.setEditable(false);
        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        jLabel3.setText("Saldo de la cuenta:");

        txtdineroIngresado.setEditable(false);
        txtdineroIngresado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtdineroIngresadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtdineroIngresado, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(75, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtdineroIngresado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(116, Short.MAX_VALUE))
        );

        btnIngresarDinero.setText("Ingresar dinero");
        btnIngresarDinero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarDineroActionPerformed(evt);
            }
        });

        btnRetirarDinero.setText("Retirar dinero");
        btnRetirarDinero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetirarDineroActionPerformed(evt);
            }
        });

        btnBalance.setText("Ver balance");
        btnBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBalanceActionPerformed(evt);
            }
        });

        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });

        btnCompra.setText("Compra dólares");
        btnCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompraActionPerformed(evt);
            }
        });

        btnVenta.setText("Venta dólares");
        btnVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVentaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnSalir, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(btnRetirarDinero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnIngresarDinero, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnBalance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addComponent(btnVenta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCompra, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(btnIngresarDinero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRetirarDinero)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBalance)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCompra)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVenta))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSalir)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        btnIngresar.setBackground(new java.awt.Color(255, 255, 255));
        btnIngresar.setText("Ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnIngresar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(168, 168, 168))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 509, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed

        try {
            String numeroCuenta = JOptionPane.showInputDialog(this, "Ingrese el número de cuenta:");
            if (numeroCuenta != null && !numeroCuenta.isEmpty()) {
                if (usuarios.validarNumeroCuenta(numeroCuenta)) {
                    String pin = JOptionPane.showInputDialog(this, "Ingrese el PIN:");
                    if (pin != null && !pin.isEmpty()) {
                        try {
                            if (usuarios.autenticarUsuario(numeroCuenta, pin)) {
                                String nombreUsuario = usuarios.obtenerNombreUsuario(numeroCuenta);
                                txtNombre.setText(nombreUsuario); 
                                datosIngresadosCorrectos= true;
                                usuarioActual = usuarios.buscarUsuario(numeroCuenta);
                                txtNombre.setText(nombreUsuario);
                                habilitarComponentes();  
                                
                            } 
                            else {
                                throw new Exception("PIN incorrecto");
                            }
                            
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(this, ex.getMessage());
                        }
                    } else {
                        throw new Exception("Ingrese un PIN válido");
                    }
                } else {
                    throw new Exception("Número de cuenta no registrado");
                }
            } else {
                throw new Exception("Ingrese un número de cuenta válido");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
        
    }//GEN-LAST:event_btnIngresarActionPerformed

    private void btnBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBalanceActionPerformed
        String numeroCuenta = JOptionPane.showInputDialog(this, "Ingrese el número de cuenta:");

    
        Usuario usuario = usuarios.buscarUsuario(numeroCuenta);

        if (usuario != null) {
            JOptionPane.showMessageDialog(this, "Saldo actual: " + usuario.getBalance());
        } else {
            JOptionPane.showMessageDialog(this, "Número de cuenta no registrado");
        }

        txtdineroIngresado.setText(String.valueOf(usuario.getBalance()));
    }//GEN-LAST:event_btnBalanceActionPerformed

    private void btnIngresarDineroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarDineroActionPerformed
        double cantidadIngresada = Double.parseDouble(JOptionPane.showInputDialog(this, "Ingrese la cantidad a ingresar:"));
        if (cantidadIngresada > 0) {
            String numeroCuenta = JOptionPane.showInputDialog(this, "Ingrese el número de cuenta:");
            Usuario usuario = usuarios.buscarUsuario(numeroCuenta);

            if (usuario != null) {
                usuario.setBalance(usuario.getBalance() + cantidadIngresada);
                JOptionPane.showMessageDialog(this, "Cantidad ingresada correctamente. Nuevo balance: " + usuario.getBalance());
            } else {
                JOptionPane.showMessageDialog(this, "Número de cuenta no registrado");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese una cantidad válida");
        }
    }//GEN-LAST:event_btnIngresarDineroActionPerformed

    private void txtdineroIngresadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtdineroIngresadoActionPerformed

    }//GEN-LAST:event_txtdineroIngresadoActionPerformed

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
      setLocationRelativeTo(null);
        
    }//GEN-LAST:event_formWindowActivated
public String obtenerNumeroCuentaActual() {
    if (usuarioActual != null) {
        return usuarioActual.getNumeroCuenta();
    } else {
        
        return "0000000000";
    }
}

public CuentaDolares obtenerCuentaDolares(String numeroCuenta) {
    Iterable<Usuario> listaUsuarios = null;
     for (Usuario usuario : listaUsuarios) {
        if (usuario.getNumeroCuenta().equals(numeroCuenta)) {
            return usuario.getCuentaDolares();
        }
    }
    return null;
}


    private void btnCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompraActionPerformed
    String numeroCuenta = obtenerNumeroCuentaActual();

    if (usuarios.tieneCuentaDolares(numeroCuenta)) {
        String montoCompraStr = JOptionPane.showInputDialog(this, "Ingrese el monto a comprar");
        double montoCompra = Double.parseDouble(montoCompraStr);

        int valorDolar = 500;
        int totalAPagar = (int )(montoCompra * valorDolar );
         Usuario usuario = usuarios.buscarUsuario(numeroCuenta);
                  usuario.setBalance(usuario.getBalance() - totalAPagar);               
        JOptionPane.showMessageDialog(this, "Has comprado $" + montoCompraStr + " por un total de "+totalAPagar+ " colones");
        
    } else {
        int opcion = JOptionPane.showConfirmDialog(this, "El usuario no tiene una cuenta en dólares. ¿Desea crear una cuenta nueva?", "Crear Cuenta en Dólares", JOptionPane.YES_NO_OPTION);

        if (opcion == JOptionPane.YES_OPTION) {
            usuarios.crearCuentaDolares(numeroCuenta);
            JOptionPane.showMessageDialog(this, "Se ha creado una nueva cuenta en dólares asociada al usuario.");
        } else {
            JOptionPane.showMessageDialog(this, "No se ha creado una cuenta en dólares para el usuario.");
        }
    }
        
    }//GEN-LAST:event_btnCompraActionPerformed

    private void btnVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVentaActionPerformed
     
    String numeroCuenta = obtenerNumeroCuentaActual();

    if (usuarios.tieneCuentaDolares(numeroCuenta)) {
        String montoVentaStr = JOptionPane.showInputDialog(this, "Ingrese el monto a vender:");
        try {
            double montoVenta = Double.parseDouble(montoVentaStr);
            if (montoVenta > 0) {
                double valorDolar = 500; 
                double montoEnMonedaLocal = montoVenta * valorDolar;
                Usuario usuario = usuarios.buscarUsuario(numeroCuenta);
                   usuario.setBalance(usuario.getBalance() + montoEnMonedaLocal);
                    
                JOptionPane.showMessageDialog(this, "Venta de " + montoVenta + " dólares realizada con éxito. Monto en colones: " + montoEnMonedaLocal);
            } else {
                JOptionPane.showMessageDialog(this, "Ingrese un monto válido.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese un monto válido.");
        }
    } else {
        int opcion = JOptionPane.showConfirmDialog(this, "El usuario no tiene una cuenta en dólares. ¿Desea crear una cuenta nueva?", "Crear Cuenta en Dólares", JOptionPane.YES_NO_OPTION);

        if (opcion == JOptionPane.YES_OPTION) {
            usuarios.crearCuentaDolares(numeroCuenta);
            JOptionPane.showMessageDialog(this, "Se ha creado una nueva cuenta en dólares asociada al usuario.");
        } else {
            JOptionPane.showMessageDialog(this, "No se ha creado una cuenta en dólares para el usuario.");
        }
    }
    }//GEN-LAST:event_btnVentaActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
btnIngresarDinero.setEnabled(false);
btnRetirarDinero.setEnabled(false);
btnBalance.setEnabled(false);
btnSalir.setEnabled(false);
btnCompra.setEnabled(false);
btnVenta.setEnabled(false);
        
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnRetirarDineroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetirarDineroActionPerformed
   
        double cantidadRetirada = Double.parseDouble(JOptionPane.showInputDialog(this, "Ingrese la cantidad a retirar:"));
        if (cantidadRetirada > 0) {
            String numeroCuenta = JOptionPane.showInputDialog(this, "Ingrese el número de cuenta:");
            Usuario usuario = usuarios.buscarUsuario(numeroCuenta);

            if (usuario != null) {
                if (cantidadRetirada <= usuario.getBalance()) {
                    usuario.setBalance(usuario.getBalance() - cantidadRetirada);
                    txtdineroIngresado.setText(String.valueOf(usuario.getBalance())); 
                    JOptionPane.showMessageDialog(this, "Cantidad retirada correctamente. Nuevo balance: " + usuario.getBalance());
                } else {
                    JOptionPane.showMessageDialog(this, "Saldo insuficiente");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Número de cuenta no registrado");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese una cantidad válida");
        }
    
    }//GEN-LAST:event_btnRetirarDineroActionPerformed

    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
     
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cajero().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBalance;
    private javax.swing.JButton btnCompra;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnIngresarDinero;
    private javax.swing.JButton btnRetirarDinero;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnVenta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtdineroIngresado;
    // End of variables declaration//GEN-END:variables

    private void deshabilitarComponentes() {
btnIngresarDinero.setEnabled(false);
btnRetirarDinero.setEnabled(false);
btnBalance.setEnabled(false);
btnSalir.setEnabled(false);
btnCompra.setEnabled(false);
btnVenta.setEnabled(false);
    }

    private void habilitarComponentes() {
        btnIngresarDinero.setEnabled(true);
        btnRetirarDinero.setEnabled(true);
        btnBalance.setEnabled(true);
        btnSalir.setEnabled(true);
btnCompra.setEnabled(true);
btnVenta.setEnabled(true);
    }
}
